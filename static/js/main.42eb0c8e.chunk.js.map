{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","fname","lname","email","phone","fullName","setFullName","inputEvent","event","console","log","target","value","name","preValue","onSubmit","preventDefault","alert","type","placeholder","onChange","number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAsGeA,EApGH,WAER,MAAgCC,mBAAS,CACrCC,MAAM,GACNC,MAAM,GACNC,MAAM,GACNC,MAAM,KAJV,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAa,SAACC,GAChBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzBH,QAAQC,IAAIF,EAAMG,OAAOE,MAKzB,MAAsBL,EAAMG,OAArBC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAEdP,GAAY,SAACQ,GAET,MAAY,UAATD,EACO,CACFZ,MAAOW,EACPV,MAAOY,EAASZ,MAChBC,MAAOW,EAASX,MAChBC,MAAOU,EAASV,OAEN,UAATS,EACK,CACFZ,MAAOa,EAASb,MAChBC,MAAOU,EACPT,MAAOW,EAASX,MAChBC,MAAOU,EAASV,OAEN,UAATS,EACC,CACFZ,MAAOa,EAASb,MAChBC,MAAOY,EAASZ,MAChBC,MAAOS,EACPR,MAAOU,EAASV,OAEN,UAATS,EACC,CACFZ,MAAOa,EAASb,MAChBC,MAAOY,EAASZ,MAChBC,MAAOW,EAASX,MAChBC,MAAOQ,QALT,MAiBlB,OACA,mCACA,8BACA,sBAAMG,SATY,SAACP,GACfA,EAAMQ,iBACNC,MAAM,mBAOV,SACA,gCACA,wCAAWZ,EAASJ,MAAOI,EAASH,SACpC,4BAAIG,EAASF,QACb,4BAAIE,EAASD,QACb,uBACA,uBAAOc,KAAK,OAAOC,YAAY,kBAAkBN,KAAK,QAAQO,SAAUb,EAAYK,MAAOP,EAASJ,QACpG,uBACA,uBACAiB,KAAK,OACLC,YAAY,kBACZN,KAAK,QACLO,SAAUb,EACVK,MAAOP,EAASH,QAEhB,uBACA,uBACAgB,KAAK,QACLC,YAAY,mBACZN,KAAK,QACLO,SAAUb,EACVK,MAAOP,EAASF,QAEhB,uBACA,uBACAe,KAAK,SACLC,YAAY,0BACZN,KAAK,QACLO,SAAUb,EACVK,MAAOP,EAASgB,SAEhB,uBACA,wBAAQH,KAAK,SAAb,kCClFWI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.42eb0c8e.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n\nconst App = ()=>{\n\n    const [fullName, setFullName] = useState({\n        fname:\"\",\n        lname:\"\",\n        email:\"\",\n        phone:\"\",\n    });\n    const inputEvent = (event)=>{\n        console.log(event.target.value);\n        console.log(event.target.name);\n\n        //const value = event.target.value;\n        //const name = event.target.name;\n\n        const {value, name} = event.target;\n\n        setFullName((preValue)=>{\n            //console.log(preValue);\n            if(name === \"fname\"){\n                return{\n                    fname: value,\n                    lname: preValue.lname,\n                    email: preValue.email,\n                    phone: preValue.phone,\n                };\n            }else if(name === \"lname\"){\n                    return{\n                        fname: preValue.fname,\n                        lname: value,\n                        email: preValue.email,\n                        phone: preValue.phone,\n                    };\n                }else if(name === \"email\"){\n                    return{\n                        fname: preValue.fname,\n                        lname: preValue.lname,\n                        email: value,\n                        phone: preValue.phone,\n                    };\n                }else if(name === \"phone\"){\n                    return{\n                        fname: preValue.fname,\n                        lname: preValue.lname,\n                        email: preValue.email,\n                        phone: value,\n                    };\n                }\n            \n        });\n    };\n    const onSubmits = (event) =>{\n        event.preventDefault();\n        alert(\"Form Submitted\");\n    \n    };\n    \n    return(\n    <>\n    <div>\n    <form onSubmit={onSubmits}>\n    <div>\n    <h1>Hello {fullName.fname}{fullName.lname}</h1>\n    <p>{fullName.email}</p>\n    <p>{fullName.phone}</p>\n    <br/>\n    <input type=\"text\" placeholder=\"Enter Your Name\" name=\"fname\" onChange={inputEvent} value={fullName.fname}/>\n    <br/>\n    <input \n    type=\"text\" \n    placeholder=\"Enter Your Name\" \n    name=\"lname\" \n    onChange={inputEvent} \n    value={fullName.lname}\n    />\n    <br/>\n    <input \n    type=\"email\" \n    placeholder=\"Enter Your Email\" \n    name=\"email\" \n    onChange={inputEvent} \n    value={fullName.email}\n    />\n    <br/>\n    <input \n    type=\"number\" \n    placeholder=\"Enter Your Phone number\" \n    name=\"phone\" \n    onChange={inputEvent} \n    value={fullName.number}\n    />\n    <br/>\n    <button type=\"submit\">Click Here</button>\n    </div>\n    </form>\n    </div>\n    </>\n    );\n};\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}